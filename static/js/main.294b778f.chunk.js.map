{"version":3,"sources":["components/Header.js","components/Footer.js","utils/Api.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/PopupProfile.js","components/PopupNewImage.js","components/PopupNewAvatar.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo/logo.svg"],"names":["Header","className","src","logo","alt","Footer","api","options","this","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","userName","userAbout","method","body","JSON","stringify","name","about","cardName","cardLink","link","cardId","statusText","data","id","userAvatar","avatar","authorization","Card","props","key","card","_id","data-name","onClick","onCardCick","type","likes","length","Main","React","useState","setUserAvatar","setUserName","userDescription","setUserDescription","cards","setCards","useEffect","all","getUserInfo","getInitialCards","user","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","onCardClick","PopupWithForm","isOpen","action","close","title","children","PopupProfile","minLength","maxLength","required","pattern","PopupNewImage","placeholder","PopupNewAvatar","ImagePopup","onClose","image","App","dataImage","setDataImage","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","buttonText","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.294b778f.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header page__header\">\r\n      <img\r\n        className=\"logo header__logo\"\r\n        src={logo}\r\n        alt=\"логотип сайта.\"\r\n      />\r\n    </header>\r\n  )\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer page__footer\">\r\n      <p className=\"footer__copyright\">© 2020 Maxim Nikitin</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","export const token = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n  headers: {\r\n    authorization: '83dedcdd-7e88-4905-85f7-b138aebc1b0b',\r\n    'Content-Type': 'application/json'\r\n  },\r\n};\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      headers: this.headers,\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`error${res.status}`);\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      headers: this.headers,\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`error${res.status}`);\r\n    });\r\n  }\r\n\r\n  updateUserInfo(userName, userAbout) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: userName,\r\n        about: userAbout,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`error${res.status}`);\r\n      });\r\n  }\r\n\r\n  addNewCard(cardName, cardLink) {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: cardName,\r\n        link: cardLink,\r\n      }),\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`error${res.status}`);\r\n    });\r\n  }\r\n\r\n  putLike(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'PUT',\r\n      headers: this.headers\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n    })\r\n    .then((data) => data);\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this.baseUrl}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers,\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`error${res.status}`);\r\n    });\r\n  };\r\n\r\n  deleteLike(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n    })\r\n    .then((data) => data);\r\n  }\r\n\r\n  setUserAvatar(userAvatar) {\r\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: userAvatar\r\n      })\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n    })\r\n  }\r\n}\r\n\r\nconst api = new Api(token);\r\nexport default api;\r\n","import React from 'react';\r\n\r\nfunction Card(props) {\r\n  function handleClick() {\r\n    props.onCardCick(props.card)\r\n  }\r\n\r\n  return (\r\n    <article className=\"photo\" key={props.card._id} id={props.card._id}>\r\n      <img className=\"photo__image\"\r\n        src={props.card.link}\r\n        alt={props.card.name}\r\n        data-name=\"\"\r\n        onClick={handleClick} />\r\n      <div className=\"photo__title\">\r\n        <h2 className=\"photo__name\">{props.card.name}</h2>\r\n        <div className=\"photo__like\">\r\n          <button className=\"button button_like\" type=\"button\" />\r\n          <p className=\"photo__like-counter\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n      <button className=\"button button_del\" type=\"button\" />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport api from '../utils/Api.js'\r\nimport Card from './Card';\r\n\r\nfunction Main(props) {\r\n  const [userAvatar, setUserAvatar] = React.useState();\r\n  const [userName, setUserName] = React.useState();\r\n  const [userDescription, setUserDescription] = React.useState();\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then(([user, cards]) => {\r\n        setUserAvatar(user.avatar);\r\n        setUserName(user.name);\r\n        setUserDescription(user.about);\r\n        setCards(cards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <img className=\"profile__avatar\" src={userAvatar} alt=\"аватар.\" />\r\n        <div className=\"profile__ava-change\" onClick={props.onEditAvatar} />\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__title\">\r\n            <h1 className=\"profile__name\">{userName}</h1>\r\n            <button className=\"button button_edit\" type=\"button\" onClick={props.onEditProfile} />\r\n          </div>\r\n          <p className=\"profile__about\">{userDescription}</p>\r\n        </div>\r\n        <button className=\"button button_add\" type=\"button\" onClick={props.onAddPlace} />\r\n      </section>\r\n      <section className=\"photos content__photos\">\r\n        {cards && cards.map((card) => (\r\n          <Card key={card._id} card={card} onCardCick={props.onCardClick} />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <section className={`popup ${props.isOpen && 'popup popup_opened'}`} id={props.name}>\r\n      <div className=\"popup__overlay\" />\r\n      <form\r\n        className={`form form_place_${props.name}`}\r\n        id={`form-${props.name}`}\r\n        name={props.name}\r\n        method=\"post\"\r\n        action=\"#\"\r\n      >\r\n        <button\r\n          className=\"button button_close-item\"\r\n          id=\"button_close-item\"\r\n          type=\"button\"\r\n          onClick={props.close}\r\n        />\r\n        <fieldset className=\"form__fieldset\">\r\n          <legend className={`form__title form__title_place_${props.name}`}>{props.title}</legend>\r\n          {props.children}\r\n        </fieldset>\r\n        <button type='submit' className='button button_submit'>Сохранить</button>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react'\r\n\r\nfunction PopupProfile() {\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"form__input form__input_name\"\r\n        id=\"fullname\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        minLength={2}\r\n        maxLength={40}\r\n        required\r\n        pattern=\"^[A-Za-zА-ЯЁа-яё\\s-]+$\"\r\n      />\r\n      <span\r\n        className=\"form__input-error form__input-error_place_name\"\r\n        id=\"fullname-error\"\r\n      ></span>\r\n      <input\r\n        className=\"form__input form__input_link\"\r\n        id=\"about\"\r\n        type=\"text\"\r\n        name=\"link\"\r\n        minLength={2}\r\n        maxLength={200}\r\n        required\r\n      />\r\n      <span\r\n        className=\"form__input-error form__input-error_place_description\"\r\n        id=\"about-error\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopupProfile;\r\n","import React from 'react';\r\n\r\nfunction PopupNewImage() {\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"form__input form__input_name\"\r\n        id=\"name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Название\"\r\n        minLength={1}\r\n        maxLength={30}\r\n        required\r\n        pattern=\"^[A-Za-zА-ЯЁа-яё\\s-]+$\"\r\n      />\r\n      <span\r\n        className=\"form__input-error form__input-error_place_name\"\r\n        id=\"name-error\"\r\n      />\r\n      <input\r\n        className=\"form__input form__input_link\"\r\n        id=\"link\"\r\n        type=\"url\"\r\n        name=\"link\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n      />\r\n      <span\r\n        className=\"form__input-error form__input-error_place_description\"\r\n        id=\"link-error\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopupNewImage;\r\n","import React from 'react';\r\n\r\nfunction PopupNewAvatar() {\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"form__input form__input_link\"\r\n        id=\"avatar-link\"\r\n        type=\"url\"\r\n        name=\"link\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n      />\r\n      <span\r\n        className=\"form__input-error form__input-error_place_avatar\"\r\n        id=\"avatar-link-error\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopupNewAvatar;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <section className={`popup ${props.isOpen && 'popup popup_opened'}`} id={props.name}>\r\n      <div className=\"popup__overlay\" />\r\n      <figure className=\"popup__big-image\">\r\n        <button\r\n          onClick={props.onClose}\r\n          className=\"button button_close-big\"\r\n          id=\"button_close-item\"\r\n          type=\"button\"\r\n        />\r\n        <img className=\"big-image\" src={props.image.link} alt={props.image.name} />\r\n        <figcaption className=\"big-image__title\">{props.image.name}</figcaption>\r\n      </figure>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React from 'react';\r\nimport '../index.css';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Main from './Main';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport PopupProfile from './PopupProfile';\r\nimport PopupNewImage from './PopupNewImage';\r\nimport PopupNewAvatar from './PopupNewAvatar';\r\nimport ImagePopup from './ImagePopup';\r\n\r\nfunction App() {\r\n  const [dataImage, setDataImage] = React.useState({\r\n    link: '',\r\n    name: ''\r\n  });\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState(false);\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard(false);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(props) {\r\n    setSelectedCard(true);\r\n    setDataImage({link: props.link, name: props.name});\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header />\r\n      <Main onEditProfile={handleEditProfileClick}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onEditAvatar={handleEditAvatarClick}\r\n        onCardClick={handleCardClick} />\r\n      <Footer />\r\n      <PopupWithForm name={'profile'}\r\n        title={'Редактировать профиль'}\r\n        buttonText={'Сохранить'}\r\n        children={<PopupProfile/>}\r\n        isOpen={isEditProfilePopupOpen}\r\n        close={closeAllPopups}/>\r\n      <PopupWithForm name={'images'}\r\n        title={'Новое место'}\r\n        buttonText={'Создать'}\r\n        children={<PopupNewImage/>}\r\n        isOpen={isAddPlacePopupOpen}\r\n        close={closeAllPopups}/>\r\n      <PopupWithForm name={'avatar'}\r\n        title={'Обновить аватар'}\r\n        buttonText={'Сохранить'}\r\n        children={<PopupNewAvatar/>}\r\n        isOpen={isEditAvatarPopupOpen}\r\n        close={closeAllPopups}/>\r\n      <PopupWithForm name={'del'}\r\n        title={'Вы уверены?'}\r\n        buttonText={'Да'}/>\r\n      <ImagePopup isOpen={selectedCard}\r\n        onClose={closeAllPopups}\r\n        image={dataImage}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.e889e45f.svg\";"],"sourceRoot":""}