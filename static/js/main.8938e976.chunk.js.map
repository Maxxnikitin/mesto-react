{"version":3,"sources":["components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","utils/Api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo/logo.svg"],"names":["Header","className","src","logo","alt","Footer","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","key","id","link","name","data-name","onClick","onCardCick","onCardLike","type","length","onCardDelete","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","onCardClick","PopupWithForm","isOpen","method","action","onSubmit","onClose","title","children","ImagePopup","image","api","options","this","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","userName","userAbout","body","JSON","stringify","cardName","cardLink","cardId","statusText","data","userAvatar","authorization","EditProfilePopup","useState","setName","description","setDescription","useEffect","buttonText","e","preventDefault","onUpdateUser","value","onChange","target","minLength","maxLength","required","pattern","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","ref","placeholder","AddPlacePopup","inputNameRef","inputLinkRef","onUpdatePlace","App","dataImage","setDataImage","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getUserInfo","getInitialCards","user","catch","err","console","log","Provider","deleteLike","putLike","newCard","newCards","c","deleteCard","filter","setUserInfo","r","addNewCard","setUserAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.8938e976.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header page__header\">\r\n      <img\r\n        className=\"logo header__logo\"\r\n        src={logo}\r\n        alt=\"логотип сайта.\"\r\n      />\r\n    </header>\r\n  )\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer page__footer\">\r\n      <p className=\"footer__copyright\">© 2020 Maxim Nikitin</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nconst CurrentUserContext = React.createContext();\r\nexport default CurrentUserContext;\r\n","import React from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  //Подписываемся на контекст\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // Показываем или нет кнопку удаления\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (\r\n    `button ${isOwn ? 'button_del' : 'button_del button_del-invisible'}`\r\n  );\r\n\r\n  // Регулируем активность кнопки лайк\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = (\r\n    `button ${isLiked ? 'button_like button_like-active' : 'button_like'}`\r\n  );\r\n\r\n  function handleClick() {\r\n    props.onCardCick(props.card)\r\n  }\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card)\r\n  }\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card)\r\n  }\r\n\r\n  return (\r\n    <article className=\"photo\" key={props.card._id} id={props.card._id}>\r\n      <img className=\"photo__image\"\r\n        src={props.card.link}\r\n        alt={props.card.name}\r\n        data-name=\"\"\r\n        onClick={handleClick} />\r\n      <div className=\"photo__title\">\r\n        <h2 className=\"photo__name\">{props.card.name}</h2>\r\n        <div className=\"photo__like\">\r\n          <button className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\" />\r\n          <p className=\"photo__like-counter\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n      <button className={cardDeleteButtonClassName} onClick={handleDeleteClick} type=\"button\" />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n  //Подписываемся на контекст\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"аватар.\" />\r\n        <div className=\"profile__ava-change\" onClick={props.onEditAvatar} />\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__title\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button className=\"button button_edit\" type=\"button\" onClick={props.onEditProfile} />\r\n          </div>\r\n          <p className=\"profile__about\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"button button_add\" type=\"button\" onClick={props.onAddPlace} />\r\n      </section>\r\n      <section className=\"photos content__photos\">\r\n        {props.cards.map((card) => (\r\n          <Card key={card._id} card={card} onCardCick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <section className={`popup ${props.isOpen && 'popup_opened'}`} id={props.name}>\r\n      <div className=\"popup__overlay\" />\r\n      <form\r\n        className={`form form_place_${props.name}`}\r\n        id={`form-${props.name}`}\r\n        name={props.name}\r\n        method=\"post\"\r\n        action=\"#\"\r\n        onSubmit={props.onSubmit}\r\n      >\r\n        <button\r\n          className=\"button button_close-item\"\r\n          id=\"button_close-item\"\r\n          type=\"button\"\r\n          onClick={props.onClose}\r\n        />\r\n        <fieldset className=\"form__fieldset\">\r\n          <legend className={`form__title form__title_place_${props.name}`}>{props.title}</legend>\r\n          {props.children}\r\n        </fieldset>\r\n        <button onClick={props.onSubmit} type='submit' className='button button_submit'>Сохранить</button>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <section className={`popup ${props.isOpen && 'popup_opened'}`} id={props.name}>\r\n      <div className=\"popup__overlay\" />\r\n      <figure className=\"popup__big-image\">\r\n        <button\r\n          onClick={props.onClose}\r\n          className=\"button button_close-big\"\r\n          id=\"button_close-item\"\r\n          type=\"button\"\r\n        />\r\n        <img className=\"big-image\" src={props.image.link} alt={props.image.name} />\r\n        <figcaption className=\"big-image__title\">{props.image.name}</figcaption>\r\n      </figure>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;\r\n","export const token = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n  headers: {\r\n    authorization: '83dedcdd-7e88-4905-85f7-b138aebc1b0b',\r\n    'Content-Type': 'application/json'\r\n  },\r\n};\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      headers: this.headers,\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`error${res.status}`);\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      headers: this.headers,\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`error${res.status}`);\r\n    });\r\n  }\r\n\r\n  setUserInfo(userName, userAbout) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: userName,\r\n        about: userAbout,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`error${res.status}`);\r\n      });\r\n  }\r\n\r\n  addNewCard(cardName, cardLink) {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: cardName,\r\n        link: cardLink,\r\n      }),\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`error${res.status}`);\r\n    });\r\n  }\r\n\r\n  putLike(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'PUT',\r\n      headers: this.headers\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n    })\r\n    .then((data) => data);\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this.baseUrl}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers,\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`error${res.status}`);\r\n    });\r\n  };\r\n\r\n  deleteLike(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n    })\r\n    .then((data) => data);\r\n  }\r\n\r\n  setUserAvatar(userAvatar) {\r\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: userAvatar\r\n      })\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n    })\r\n  }\r\n}\r\n\r\nconst api = new Api(token);\r\nexport default api;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n  // Подписка на контекст\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm name={'profile'}\r\n      title={'Редактировать профиль'}\r\n      buttonText={'Сохранить'}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"form__input form__input_name\"\r\n        id=\"fullname\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name || ''}\r\n        onChange={handleNameChange}\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        required\r\n        pattern=\"^[A-Za-zА-ЯЁа-яё\\s-]+$\"\r\n      />\r\n      <span\r\n        className=\"form__input-error form__input-error_place_name\"\r\n        id=\"fullname-error\"\r\n      />\r\n      <input\r\n        className=\"form__input form__input_link\"\r\n        id=\"about\"\r\n        type=\"text\"\r\n        name=\"link\"\r\n        value={description || ''}\r\n        onChange={handleDescriptionChange}\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        required\r\n      />\r\n      <span\r\n        className=\"form__input-error form__input-error_place_description\"\r\n        id=\"about-error\"\r\n      />\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  //Используем Реф\r\n  const avatarRef = React.useRef();\r\n  // Подписка на контекст\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    avatarRef.current.value = currentUser.avatar;\r\n  }, [currentUser]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateAvatar({\r\n      avatar: avatarRef.current.value\r\n    });\r\n  }\r\n  return (\r\n    <PopupWithForm name={'avatar'}\r\n      title={'Обновить аватар'}\r\n      buttonText={'Сохранить'}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}>\r\n      <input\r\n        ref={avatarRef}\r\n        className=\"form__input form__input_link\"\r\n        id=\"avatar-link\"\r\n        type=\"url\"\r\n        name=\"link\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n      />\r\n      <span\r\n        className=\"form__input-error form__input-error_place_avatar\"\r\n        id=\"avatar-link-error\"\r\n      />\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  //Используем реф\r\n  const inputNameRef = React.useRef();\r\n  const inputLinkRef = React.useRef();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdatePlace({\r\n      name: inputNameRef.current.value,\r\n      link: inputLinkRef.current.value\r\n    });\r\n}\r\n  return (\r\n    <PopupWithForm name={'images'}\r\n      title={'Новое место'}\r\n      buttonText={'Создать'}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}>\r\n      <input\r\n        ref={inputNameRef}\r\n        className=\"form__input form__input_name\"\r\n        id=\"name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Название\"\r\n        minLength=\"1\"\r\n        maxLength=\"30\"\r\n        required\r\n        pattern=\"^[A-Za-zА-ЯЁа-яё\\s-]+$\"\r\n      />\r\n      <span\r\n        className=\"form__input-error form__input-error_place_name\"\r\n        id=\"name-error\"\r\n      />\r\n      <input\r\n        ref={inputLinkRef}\r\n        className=\"form__input form__input_link\"\r\n        id=\"link\"\r\n        type=\"url\"\r\n        name=\"link\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n      />\r\n      <span\r\n        className=\"form__input-error form__input-error_place_description\"\r\n        id=\"link-error\"\r\n      />\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react';\nimport '../index.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api.js'\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n  const [dataImage, setDataImage] = React.useState({\n    link: '',\n    name: ''\n  });\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  //Промисы с информацией о пользователе и с карточками\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([user, cards]) => {\n        setCurrentUser(user);\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  //Промис с карточками\n  /* React.useEffect(() => {\n    Promise.all([api.getInitialCards()])\n      .then(([cards]) => {\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []); */\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(props) {\n    setSelectedCard(true);\n    setDataImage({link: props.link, name: props.name});\n  }\n\n  function handleUpdateUser(data) {\n    api.setUserInfo(data.name, data.about).then((r) => {\n      setCurrentUser(r);\n      closeAllPopups()\n    })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  function handleUpdateAvatar(data) {\n    api.setUserAvatar(data.avatar).then((r) => {\n      setCurrentUser(r);\n      closeAllPopups()\n    })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api.addNewCard(data.name, data.link).then((newCard) => {\n      setCards([...cards, newCard]);\n      closeAllPopups()\n    })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    (!isLiked ? api.putLike(card._id) : api.deleteLike(card._id)).then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter((c) => c._id !== card._id);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete} />\n        <Footer />\n        <EditProfilePopup isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onUpdatePlace={handleAddPlaceSubmit} />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} />\n        <PopupWithForm name={'del'}\n          title={'Вы уверены?'}\n          buttonText={'Да'}/>\n        <ImagePopup isOpen={selectedCard}\n          onClose={closeAllPopups}\n          image={dataImage}/>\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.e889e45f.svg\";"],"sourceRoot":""}